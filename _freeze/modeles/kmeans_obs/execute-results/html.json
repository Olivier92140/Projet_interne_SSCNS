{
  "hash": "7f04f6d155fec1a664112ad155be8f0e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"K-means + ObservableJS\"\nformat: html\neditor: visual\nexecute:\n  freeze: auto\n---\n\n## ðŸ”¢ K-means sur les donnÃ©es `iris` (R)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Charger les donnÃ©es\ninstall.packages(\"datasets\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nInstalling package into '/usr/local/lib/R/site-library'\n(as 'lib' is unspecified)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'datasets' is a base package, and should not be updated\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(datasets)\ndata(iris)\nhead(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n```\n\n\n:::\n\n```{.r .cell-code}\n# Appliquer k-means\nset.seed(123)\nX <- iris[, 1:4]\nkm <- kmeans(X, centers = 3)\n\n# Ajouter les clusters aux donnÃ©es\niris$Cluster <- as.character(km$cluster)\n\n# Exporter en JSON pour Observable\njsonlite::write_json(iris, \"iris_clusters.json\", pretty = TRUE, auto_unbox = TRUE)\n```\n:::\n\n\n\n```{ojs}\nimport { FileAttachment } from \"@observablehq/stdlib\"\n\n// Charger les donnÃ©es JSON\nconst data = await FileAttachment(\"iris_clusters.json\").json()\n\nPlot.plot({\n  marks: [\n    Plot.dot(data, {\n      x: d => d[\"Sepal.Length\"],\n      y: d => d[\"Petal.Length\"],\n      fill: d => d.Cluster,\n      title: d => d.Species\n    })\n  ],\n  color: { legend: true },\n  x: { label: \"Longueur SÃ©pale\" },\n  y: { label: \"Longueur PÃ©tale\" },\n  width: 700,\n  height: 450\n})\n```\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}