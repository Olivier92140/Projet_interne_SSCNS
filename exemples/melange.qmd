---
title: "Modèles de mélange de gaussiennes"
author: "Olivier Malahel"
format: html
from: markdown+emoji
code-block-bg: true
code-block-border-left: "#31BAE9"
---

## Introduction

Dans cet exemple, nous ajustons un **modèle de mélange de lois normales** à des données simulées, en utilisant le package R `mclust`. Le but est d’identifier automatiquement des groupes (ou classes) au sein des données.

---
title: "Modèle de Mélange Gaussien"
format: html
editor: visual
---

## Préambule : Simulation des données 
```{r}
# chargement des packages
install.packages("mclust") 
library(mclust)
set.seed(123)

# Deux populations gaussiennes
x1 <- rnorm(100, mean = 0, sd = 1)
x2 <- rnorm(100, mean = 5, sd = 1.5)

# Données mélangées
x <- c(x1, x2)
```

## 1. Fonction de densité du mélange
```{r}
# Densité d’un mélange à 2 composantes
densite_melange <- function(x, pi, mu, sigma) {
  pi[1] * dnorm(x, mean = mu[1], sd = sigma[1]) +
  pi[2] * dnorm(x, mean = mu[2], sd = sigma[2])
}

# Exemple de tracé avec pi[1]=0.5 et pi[2]=0.5
curve(densite_melange(x, pi = c(0.5, 0.5), mu = c(0, 5), sigma = c(1, 1.5)),
      from = -5, to = 10, col = "red", lwd = 2, ylab = "Densité", main = "Densité du mélange")
```

## 2. Données incomplètes vs complètes
```{r}
# Construction de Z complet (connu car simulation)
z <- c(rep(1, 100), rep(2, 100))

# Log-vraisemblance complète
log_vraisemblance_completee <- function(x, z, pi, mu, sigma) {
  sum(log(pi[z]) + dnorm(x, mean = mu[z], sd = sigma[z], log = TRUE))
}

# Exemple : vrais paramètres
log_vraisemblance_completee(x, z, pi = c(0.5, 0.5), mu = c(0, 5), sigma = c(1, 1.5))
```

## 3. Estimation par EM via mclust

```{r}
# Estimation avec mclust
res <- Mclust(x, G = 2)  # G = nb de composantes

# Résumé des paramètres
summary(res)
```

## 4. Affichage des résultats

```{r}
plot(res, what = "density", main = "Estimation du modèle de mélange par EM")
```

## affichage des paramètres 

```{r}
print(res$parameters)
```